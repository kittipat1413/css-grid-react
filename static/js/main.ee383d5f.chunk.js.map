{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","Number","SetNumber","Mode","SetMode","Ans","SetAns","useEffect","n","isPerfectSquare","x","s","parseInt","Math","sqrt","num","i","isPrime","className","type","value","onChange","e","target","toString","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNA8DeA,MA3Df,WACE,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAwBF,mBAAS,WAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAsBJ,oBAAS,GAA/B,mBAAOK,EAAP,KAAYC,EAAZ,KAoCA,OAlCAC,qBAAU,WAER,IASoBC,EAJdC,EAAkB,SAAAC,GACtB,IAAIC,EAAIC,SAASC,KAAKC,KAAKJ,IAC3B,OAAQC,EAAIA,IAAMD,GASlBJ,EADW,YAATH,EAfY,SAAAY,GACd,IAAI,IAAIC,EAAI,EAAGA,EAAID,EAAKC,IACtB,GAAGD,EAAMC,IAAM,EAAG,OAAO,EAC3B,OAAOD,EAAM,EAaNE,CAAQhB,GANRQ,EAAgB,GADLD,EAUCP,GATYO,EAAI,IAC5BC,EAAgB,EAAID,EAAIA,EAAI,MAUpC,CAACP,EAAOE,IAYT,sBAAKe,UAAU,YAAf,UACE,qBAAKA,UAAU,OAAf,SACE,uBAAOC,KAAK,OAAOC,MAAOnB,EAAQoB,SAXnB,SAACC,GACpBpB,EAAUoB,EAAEC,OAAOH,YAajB,qBAAKF,UAAU,MAAf,SACE,yBAAQG,SAAW,SAACC,GAAOlB,EAAQkB,EAAEC,OAAOH,QAA5C,UACE,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,cAAd,8BAIJ,qBAAKF,UAAU,QAAf,SACGb,EAAImB,iBC5CEC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.ee383d5f.chunk.js","sourcesContent":["import React,{ useState, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [Number, SetNumber] = useState('');\n  const [Mode, SetMode] = useState(\"isPrime\");\n  const [Ans, SetAns] = useState(false);\n\n  useEffect(() => {\n    // Move func isPrime,isFibonacci inside to avoid the warning\n    const isPrime = num => {\n      for(let i = 2; i < num; i++)\n        if(num % i === 0) return false;\n      return num > 1;\n    }\n    const isPerfectSquare = x =>{\n      let s = parseInt(Math.sqrt(x));\n      return (s * s === x);\n    }\n    const isFibonacci = n =>{\n      return isPerfectSquare(5 * n * n + 4) ||\n             isPerfectSquare(5 * n * n - 4);\n    }\n \n    \n    if (Mode === \"isPrime\") {\n      SetAns(isPrime(Number))\n    }\n    else{\n      SetAns(isFibonacci(Number))\n    }\n  }, [Number,Mode]);\n\n  \n  const handleChange = (e) =>{\n    SetNumber(e.target.value)\n  }\n\n\n \n\n\n  return (\n    <div className=\"container\">\n      <div className='left'>\n        <input type='text' value={Number} onChange={handleChange}></input>\n      </div>\n\n      <div className='mid'>\n        <select onChange={ (e) =>{ SetMode(e.target.value)}}>\n          <option value='isPrime'>isPrime</option>\n          <option value='isFibonacci'>isFibonacci</option>\n        </select>\n      </div>\n\n      <div className='right'>\n        {Ans.toString()}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}